/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import java.net.URI

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * @param name
  * @param uri
  */
case class NamedUri(
    name: Option[String] = None,
    uri: Option[URI] = None
)

object NamedUri {

  given jsonCodec: JsonValueCodec[NamedUri] = JsonCodecMaker.make(codecMakerConfig)

  given encoderNamedUri: Encoder[NamedUri] = Encoder.instance { t =>
    Json.fromFields {
      Seq(
        t.name.map(v => "name" -> v.asJson),
        t.uri.map(v => "uri" -> v.asJson)
      ).flatten
    }
  }

  given decoderNamedUri: Decoder[NamedUri] = Decoder.instance { c =>
    for {
      name <- c.downField("name").as[Option[String]]
      uri  <- c.downField("uri").as[Option[URI]]
    } yield NamedUri(
      name = name,
      uri = uri
    )
  }

}
