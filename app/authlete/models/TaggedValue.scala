/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * @param tag
  *   The language tag part.
  * @param value
  *   The value part.
  */
case class TaggedValue(
    tag: Option[String] = None,
    value: Option[String] = None
)

object TaggedValue {

  given jsonCodec: JsonValueCodec[TaggedValue] = JsonCodecMaker.make(codecMakerConfig)

  given encoderTaggedValue: Encoder[TaggedValue] = Encoder.instance { t =>
    Json.fromFields {
      Seq(
        t.tag.map(v => "tag" -> v.asJson),
        t.value.map(v => "value" -> v.asJson)
      ).flatten
    }
  }

  given decoderTaggedValue: Decoder[TaggedValue] = Decoder.instance { c =>
    for {
      tag   <- c.downField("tag").as[Option[String]]
      value <- c.downField("value").as[Option[String]]
    } yield TaggedValue(
      tag = tag,
      value = value
    )
  }

}
