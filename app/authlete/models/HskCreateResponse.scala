/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * @param resultCode
  *   The code which represents the result of the API call.
  * @param resultMessage
  *   A short message which explains the result of the API call.
  * @param action
  * @param hsk
  */
case class HskCreateResponse(
    resultCode: Option[String] = None,
    resultMessage: Option[String] = None,
    action: Option[HskCreateResponseAction] = None,
    hsk: Option[Hsk] = None
)

object HskCreateResponse {

  given jsonCodec: JsonValueCodec[HskCreateResponse] = JsonCodecMaker.make(codecMakerConfig)

  given encoderHskCreateResponse: Encoder[HskCreateResponse] = Encoder.instance { t =>
    Json.fromFields {
      Seq(
        t.resultCode.map(v => "resultCode" -> v.asJson),
        t.resultMessage.map(v => "resultMessage" -> v.asJson),
        t.action.map(v => "action" -> v.asJson),
        t.hsk.map(v => "hsk" -> v.asJson)
      ).flatten
    }
  }

  given decoderHskCreateResponse: Decoder[HskCreateResponse] = Decoder.instance { c =>
    for {
      resultCode    <- c.downField("resultCode").as[Option[String]]
      resultMessage <- c.downField("resultMessage").as[Option[String]]
      action        <- mapEmptyStringToNull(c.downField("action")).as[Option[HskCreateResponseAction]]
      hsk           <- c.downField("hsk").as[Option[Hsk]]
    } yield HskCreateResponse(
      resultCode = resultCode,
      resultMessage = resultMessage,
      action = action,
      hsk = hsk
    )
  }

}
