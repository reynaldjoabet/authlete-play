/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * The next action that the authorization server implementation should take.
  */
enum TokenResponseAction(val value: String) derives ConfiguredJsonValueCodec {

  case INTERNALSERVERERROR extends TokenResponseAction("INTERNAL_SERVER_ERROR")
  case INVALIDCLIENT       extends TokenResponseAction("INVALID_CLIENT")
  case BADREQUEST          extends TokenResponseAction("BAD_REQUEST")
  case PASSWORD            extends TokenResponseAction("PASSWORD")
  case OK                  extends TokenResponseAction("OK")
  case TOKENEXCHANGE       extends TokenResponseAction("TOKEN_EXCHANGE")
  case JWTBEARER           extends TokenResponseAction("JWT_BEARER")

}

object TokenResponseAction {

  def withValueOpt(value: String): Option[TokenResponseAction] = TokenResponseAction
    .values
    .find(_.value == value)

  def withValue(value: String): TokenResponseAction =
    withValueOpt(value).getOrElse(
      throw java.lang.IllegalArgumentException(s"TokenResponseAction enum case not found: $value")
    )

  given decoderTokenResponseAction: Decoder[TokenResponseAction] = Decoder
    .decodeString
    .map(withValue)

  given encoderTokenResponseAction: Encoder[TokenResponseAction] = Encoder
    .encodeString
    .contramap[TokenResponseAction](_.value)

}
