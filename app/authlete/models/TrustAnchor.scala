/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * @param entityId
  *   the entity ID of the trust anchor
  * @param jwks
  *   the JWK Set document containing public keys of the trust anchor
  */
case class TrustAnchor(
    entityId: Option[String] = None,
    jwks: Option[String] = None
)

object TrustAnchor {

  given jsonCodec: JsonValueCodec[TrustAnchor] = JsonCodecMaker.make(codecMakerConfig)

  given encoderTrustAnchor: Encoder[TrustAnchor] = Encoder.instance { t =>
    Json.fromFields {
      Seq(
        t.entityId.map(v => "entityId" -> v.asJson),
        t.jwks.map(v => "jwks" -> v.asJson)
      ).flatten
    }
  }

  given decoderTrustAnchor: Decoder[TrustAnchor] = Decoder.instance { c =>
    for {
      entityId <- c.downField("entityId").as[Option[String]]
      jwks     <- c.downField("jwks").as[Option[String]]
    } yield TrustAnchor(
      entityId = entityId,
      jwks = jwks
    )
  }

}
