/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * The reason of the failure of the authorization request. For more details, see [NO_INTERACTION]
  * in the description of `/auth/authorization` API.
  */
enum AuthorizationFailRequestReason(val value: String) derives ConfiguredJsonValueCodec {

  case UNKNOWN                  extends AuthorizationFailRequestReason("UNKNOWN")
  case NOTLOGGEDIN              extends AuthorizationFailRequestReason("NOT_LOGGED_IN")
  case MAXAGENOTSUPPORTED       extends AuthorizationFailRequestReason("MAX_AGE_NOT_SUPPORTED")
  case EXCEEDSMAXAGE            extends AuthorizationFailRequestReason("EXCEEDS_MAX_AGE")
  case DIFFERENTSUBJECT         extends AuthorizationFailRequestReason("DIFFERENT_SUBJECT")
  case ACRNOTSATISFIED          extends AuthorizationFailRequestReason("ACR_NOT_SATISFIED")
  case DENIED                   extends AuthorizationFailRequestReason("DENIED")
  case SERVERERROR              extends AuthorizationFailRequestReason("SERVER_ERROR")
  case NOTAUTHENTICATED         extends AuthorizationFailRequestReason("NOT_AUTHENTICATED")
  case ACCOUNTSELECTIONREQUIRED extends AuthorizationFailRequestReason("ACCOUNT_SELECTION_REQUIRED")
  case CONSENTREQUIRED          extends AuthorizationFailRequestReason("CONSENT_REQUIRED")
  case INTERACTIONREQUIRED      extends AuthorizationFailRequestReason("INTERACTION_REQUIRED")
  case INVALIDTARGET            extends AuthorizationFailRequestReason("INVALID_TARGET")

}

object AuthorizationFailRequestReason {

  def withValueOpt(value: String): Option[AuthorizationFailRequestReason] =
    AuthorizationFailRequestReason.values.find(_.value == value)

  def withValue(value: String): AuthorizationFailRequestReason =
    withValueOpt(value).getOrElse(
      throw java
        .lang
        .IllegalArgumentException(s"AuthorizationFailRequestReason enum case not found: $value")
    )

  given decoderAuthorizationFailRequestReason: Decoder[AuthorizationFailRequestReason] = Decoder
    .decodeString
    .map(withValue)

  given encoderAuthorizationFailRequestReason: Encoder[AuthorizationFailRequestReason] = Encoder
    .encodeString
    .contramap[AuthorizationFailRequestReason](_.value)

}
