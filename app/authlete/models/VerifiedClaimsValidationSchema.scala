/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import com.typesafe.config.Config
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * The verified claims validation schema set.
  */
enum VerifiedClaimsValidationSchema(val value: String) derives ConfiguredJsonValueCodec {

  case Standard           extends VerifiedClaimsValidationSchema("standard")
  case StandardidDocument extends VerifiedClaimsValidationSchema("standard+id_document")

}

object VerifiedClaimsValidationSchema {

  def withValueOpt(value: String): Option[VerifiedClaimsValidationSchema] =
    VerifiedClaimsValidationSchema.values.find(_.value == value)

  def withValue(value: String): VerifiedClaimsValidationSchema =
    withValueOpt(value).getOrElse(
      throw java
        .lang
        .IllegalArgumentException(s"VerifiedClaimsValidationSchema enum case not found: $value")
    )

  given decoderVerifiedClaimsValidationSchema: Decoder[VerifiedClaimsValidationSchema] = Decoder
    .decodeString
    .map(withValue)

  given encoderVerifiedClaimsValidationSchema: Encoder[VerifiedClaimsValidationSchema] = Encoder
    .encodeString
    .contramap[VerifiedClaimsValidationSchema](_.value)

// given jsonCodec: JsonValueCodec[VerifiedClaimsValidationSchema] = JsonValueCodec
//   .string
//   .map(VerifiedClaimsValidationSchema.withValue)(_.value)
}
