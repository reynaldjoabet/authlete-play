/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * @param clientLocked
  *   The flag value to be set
  */
case class ClientFlagUpdateRequest(
    clientLocked: Boolean
)

object ClientFlagUpdateRequest {

  given jsonCodec: JsonValueCodec[ClientFlagUpdateRequest] = JsonCodecMaker.make(codecMakerConfig)

  given encoderClientFlagUpdateRequest: Encoder[ClientFlagUpdateRequest] = Encoder.instance { t =>
    Json.fromFields {
      Seq(
        Some("clientLocked" -> t.clientLocked.asJson)
      ).flatten
    }
  }

  given decoderClientFlagUpdateRequest: Decoder[ClientFlagUpdateRequest] = Decoder.instance { c =>
    for {
      clientLocked <- c.downField("clientLocked").as[Boolean]
    } yield ClientFlagUpdateRequest(
      clientLocked = clientLocked
    )
  }

}
