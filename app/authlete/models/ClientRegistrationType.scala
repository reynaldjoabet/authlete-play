/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * Values for the `client_registration_types` RP metadata and the
  * `client_registration_types_supported` OP metadata that are defined in [OpenID Connect Federation
  * 1.0](https://openid.net/specs/openid-connect-federation-1_0.html).
  */
enum ClientRegistrationType(val value: String) derives ConfiguredJsonValueCodec {

  case AUTOMATIC extends ClientRegistrationType("AUTOMATIC")
  case EXPLICIT  extends ClientRegistrationType("EXPLICIT")

}

object ClientRegistrationType {

  def withValueOpt(value: String): Option[ClientRegistrationType] = ClientRegistrationType
    .values
    .find(_.value == value)

  def withValue(value: String): ClientRegistrationType =
    withValueOpt(value).getOrElse(
      throw java
        .lang
        .IllegalArgumentException(s"ClientRegistrationType enum case not found: $value")
    )

  given decoderClientRegistrationType: Decoder[ClientRegistrationType] = Decoder
    .decodeString
    .map(withValue)

  given encoderClientRegistrationType: Encoder[ClientRegistrationType] = Encoder
    .encodeString
    .contramap[ClientRegistrationType](_.value)

}
