/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * @param key
  *   The key part.
  * @param value
  *   The value part.
  * @param hidden
  *   The flag to indicate whether this property hidden from or visible to client applications. If
  *   `true`, this property is hidden from client applications. Otherwise, this property is visible
  *   to client applications.
  */
case class Property(
    key: Option[String] = None,
    value: Option[String] = None,
    hidden: Option[Boolean] = None
)

object Property {

  given jsonCodec: JsonValueCodec[Property] = JsonCodecMaker.make(codecMakerConfig)

  given encoderProperty: Encoder[Property] = Encoder.instance { t =>
    Json.fromFields {
      Seq(
        t.key.map(v => "key" -> v.asJson),
        t.value.map(v => "value" -> v.asJson),
        t.hidden.map(v => "hidden" -> v.asJson)
      ).flatten
    }
  }

  given decoderProperty: Decoder[Property] = Decoder.instance { c =>
    for {
      key    <- c.downField("key").as[Option[String]]
      value  <- c.downField("value").as[Option[String]]
      hidden <- c.downField("hidden").as[Option[Boolean]]
    } yield Property(
      key = key,
      value = value,
      hidden = hidden
    )
  }

}
