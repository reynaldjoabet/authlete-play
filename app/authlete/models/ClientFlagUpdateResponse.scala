/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * @param resultCode
  *   The code which represents the result of the API call.
  * @param resultMessage
  *   A short message which explains the result of the API call.
  */
case class ClientFlagUpdateResponse(
    resultCode: String,
    resultMessage: String
)

object ClientFlagUpdateResponse {

  given jsonCodec: JsonValueCodec[ClientFlagUpdateResponse] = JsonCodecMaker.make(codecMakerConfig)

  given encoderClientFlagUpdateResponse: Encoder[ClientFlagUpdateResponse] = Encoder.instance { t =>
    Json.fromFields {
      Seq(
        Some("resultCode"    -> t.resultCode.asJson),
        Some("resultMessage" -> t.resultMessage.asJson)
      ).flatten
    }
  }

  given decoderClientFlagUpdateResponse: Decoder[ClientFlagUpdateResponse] = Decoder.instance { c =>
    for {
      resultCode    <- c.downField("resultCode").as[String]
      resultMessage <- c.downField("resultMessage").as[String]
    } yield ClientFlagUpdateResponse(
      resultCode = resultCode,
      resultMessage = resultMessage
    )
  }

}
