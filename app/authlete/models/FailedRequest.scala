/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

// case class FailedRequest(code: Int, message: String, body: Option[Json] = None)
//     extends Exception(
//       s"Server returned status $code; message: $message; body: ${body.map(_.noSpaces).getOrElse("")}"
//     )

case class FailedRequest(code: Int, message: String, body: Option[String] = None)
    extends Exception(
      s"Server returned status $code; message: $message; body: ${body.getOrElse("")}"
    )

object FailedRequest {

  given jsonCodec: JsonValueCodec[FailedRequest] = JsonCodecMaker.make(codecMakerConfig)

  // given encoderFailedRequest: Encoder[FailedRequest] = Encoder.instance { t =>
  //   Json.fromFields {
  //     Seq(
  //       Some("code"    -> t.code.asJson),
  //       Some("message" -> t.message.asJson),
  //       t.body.map(x => "body" -> x)
  //     ).flatten
  //   }
  // }

  // given decodeFailedRequest: Decoder[FailedRequest] = Decoder.instance { c =>
  //   for {
  //     code    <- c.downField("code").as[Int]
  //     message <- c.downField("message").as[String]
  //     body    <- c.downField("body").as[Option[Json]]
  //   } yield FailedRequest(
  //     code = code,
  //     message = message,
  //     body = body
  //   )
  // }

}
