/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * The display mode which the client application requests by `display` request parameter. When the
  * authorization request does not have `display` request parameter, `PAGE` is set as the default
  * value. It is ensured that the value of `display` is one of the supported display modes which are
  * specified by `supportedDisplays` configuration parameter of the service. If the display mode
  * specified by the authorization request is not supported, an error is raised. Values for this
  * property correspond to the values listed in \"[OpenID Connect Core 1.0, 3.1.2.1. Authentication
  * Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest), display\".
  */
enum Display(val value: String) derives ConfiguredJsonValueCodec {

  case PAGE  extends Display("PAGE")
  case POPUP extends Display("POPUP")
  case TOUCH extends Display("TOUCH")
  case WAP   extends Display("WAP")

}

object Display {

  def withValueOpt(value: String): Option[Display] = Display.values.find(_.value == value)

  def withValue(value: String): Display =
    withValueOpt(value).getOrElse(
      throw java.lang.IllegalArgumentException(s"Display enum case not found: $value")
    )

  given decoderDisplay: Decoder[Display] = Decoder.decodeString.map(withValue)
  given encoderDisplay: Encoder[Display] = Encoder.encodeString.contramap[Display](_.value)

}
