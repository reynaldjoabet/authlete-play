/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * @param jose
  *   A JOSE object.
  * @param mandatoryClaims
  *   Mandatory claims that are required to be included in the JOSE object.
  * @param clockSkew
  *   Allowable clock skew in seconds.
  * @param clientIdentifier
  *   The identifier of the client application whose keys are required for verification of the JOSE
  *   object.
  * @param signedByClient
  *   The flag which indicates whether the signature of the JOSE object has been signed by a client
  *   application with the client's private key or a shared symmetric key.
  */
case class JoseVerifyRequest(
    jose: String,
    mandatoryClaims: Option[String] = None,
    clockSkew: Option[Int] = None,
    clientIdentifier: Option[String] = None,
    signedByClient: Option[Boolean] = None
)

object JoseVerifyRequest {

  given jsonCodec: JsonValueCodec[JoseVerifyRequest] = JsonCodecMaker.make(codecMakerConfig)

  given encoderJoseVerifyRequest: Encoder[JoseVerifyRequest] = Encoder.instance { t =>
    Json.fromFields {
      Seq(
        Some("jose" -> t.jose.asJson),
        t.mandatoryClaims.map(v => "mandatoryClaims" -> v.asJson),
        t.clockSkew.map(v => "clockSkew" -> v.asJson),
        t.clientIdentifier.map(v => "clientIdentifier" -> v.asJson),
        t.signedByClient.map(v => "signedByClient" -> v.asJson)
      ).flatten
    }
  }

  given decoderJoseVerifyRequest: Decoder[JoseVerifyRequest] = Decoder.instance { c =>
    for {
      jose             <- c.downField("jose").as[String]
      mandatoryClaims  <- c.downField("mandatoryClaims").as[Option[String]]
      clockSkew        <- c.downField("clockSkew").as[Option[Int]]
      clientIdentifier <- c.downField("clientIdentifier").as[Option[String]]
      signedByClient   <- c.downField("signedByClient").as[Option[Boolean]]
    } yield JoseVerifyRequest(
      jose = jose,
      mandatoryClaims = mandatoryClaims,
      clockSkew = clockSkew,
      clientIdentifier = clientIdentifier,
      signedByClient = signedByClient
    )
  }

}
