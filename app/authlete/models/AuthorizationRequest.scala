/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * @param parameters
  *   OAuth 2.0 authorization request parameters which are the request parameters that the OAuth 2.0
  *   authorization endpoint of the authorization server implementation received from the client
  *   application. The value of parameters is either (1) the entire query string when the HTTP
  *   method of the request from the client application is `GET` or (2) the entire entity body
  *   (which is formatted in `application/x-www-form-urlencoded`) when the HTTP method of the
  *   request from the client application is `POST`.
  */
case class AuthorizationRequest(
    parameters: String
)

object AuthorizationRequest {

  given jsonCodec: JsonValueCodec[AuthorizationRequest] = JsonCodecMaker.make(codecMakerConfig)

  given encoderAuthorizationRequest: Encoder[AuthorizationRequest] = Encoder.instance { t =>
    Json.fromFields {
      Seq(
        Some("parameters" -> t.parameters.asJson)
      ).flatten
    }
  }

  given decoderAuthorizationRequest: Decoder[AuthorizationRequest] = Decoder.instance { c =>
    for {
      parameters <- c.downField("parameters").as[String]
    } yield AuthorizationRequest(
      parameters = parameters
    )
  }

}
