/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * The client authentication method that the client application declares that it uses at the token
  * endpoint. This property corresponds to `token_endpoint_auth_method` in [OpenID Connect Dynamic
  * Client Registration 1.0, 2. Client
  * Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
  */
enum ClientAuthMethod(val value: String) derives ConfiguredJsonValueCodec {

  case NONE                    extends ClientAuthMethod("NONE")
  case CLIENTSECRETBASIC       extends ClientAuthMethod("CLIENT_SECRET_BASIC")
  case CLIENTSECRETPOST        extends ClientAuthMethod("CLIENT_SECRET_POST")
  case CLIENTSECRETJWT         extends ClientAuthMethod("CLIENT_SECRET_JWT")
  case PRIVATEKEYJWT           extends ClientAuthMethod("PRIVATE_KEY_JWT")
  case TLSCLIENTAUTH           extends ClientAuthMethod("TLS_CLIENT_AUTH")
  case SELFSIGNEDTLSCLIENTAUTH extends ClientAuthMethod("SELF_SIGNED_TLS_CLIENT_AUTH")

}

object ClientAuthMethod {

  def withValueOpt(value: String): Option[ClientAuthMethod] = ClientAuthMethod
    .values
    .find(_.value == value)

  def withValue(value: String): ClientAuthMethod =
    withValueOpt(value).getOrElse(
      throw java.lang.IllegalArgumentException(s"ClientAuthMethod enum case not found: $value")
    )

  given decoderClientAuthMethod: Decoder[ClientAuthMethod] = Decoder.decodeString.map(withValue)

  given encoderClientAuthMethod: Encoder[ClientAuthMethod] = Encoder
    .encodeString
    .contramap[ClientAuthMethod](_.value)

}
