/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * The prompt that the UI displayed to the end-user must satisfy as the minimum level. This value
  * comes from `prompt` request parameter. When the authorization request does not contain `prompt`
  * request parameter, `CONSENT` is used as the default value. See \"[OpenID Connect Core 1.0,
  * 3.1.2.1. Authentication
  * Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest), prompt\" for
  * `prompt` request parameter.
  */
enum Prompt(val value: String) derives ConfiguredJsonValueCodec {

  case NONE          extends Prompt("NONE")
  case LOGIN         extends Prompt("LOGIN")
  case CONSENT       extends Prompt("CONSENT")
  case SELECTACCOUNT extends Prompt("SELECT_ACCOUNT")

}

object Prompt {

  def withValueOpt(value: String): Option[Prompt] = Prompt.values.find(_.value == value)

  def withValue(value: String): Prompt =
    withValueOpt(value).getOrElse(
      throw java.lang.IllegalArgumentException(s"Prompt enum case not found: $value")
    )

  given decoderPrompt: Decoder[Prompt] = Decoder.decodeString.map(withValue)
  given encoderPrompt: Encoder[Prompt] = Encoder.encodeString.contramap[Prompt](_.value)

}
