/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * The grant management action of the device authorization request. The `grant_management_action`
  * request parameter is defined in [Grant Management for OAuth
  * 2.0](https://openid.net/specs/fapi-grant-management.html).
  */
enum GrantManagementAction(val value: String) derives ConfiguredJsonValueCodec {

  case CREATE  extends GrantManagementAction("CREATE")
  case QUERY   extends GrantManagementAction("QUERY")
  case REPLACE extends GrantManagementAction("REPLACE")
  case REVOKE  extends GrantManagementAction("REVOKE")
  case MERGE   extends GrantManagementAction("MERGE")

}

object GrantManagementAction {

  def withValueOpt(value: String): Option[GrantManagementAction] = GrantManagementAction
    .values
    .find(_.value == value)

  def withValue(value: String): GrantManagementAction =
    withValueOpt(value).getOrElse(
      throw java.lang.IllegalArgumentException(s"GrantManagementAction enum case not found: $value")
    )

  given decoderGrantManagementAction: Decoder[GrantManagementAction] = Decoder
    .decodeString
    .map(withValue)

  given encoderGrantManagementAction: Encoder[GrantManagementAction] = Encoder
    .encodeString
    .contramap[GrantManagementAction](_.value)

}
