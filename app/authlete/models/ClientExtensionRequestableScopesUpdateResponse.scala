/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import scala.collection.immutable.Seq

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * @param requestableScopes
  */
case class ClientExtensionRequestableScopesUpdateResponse(
    requestableScopes: Option[Seq[String]] = None
)

object ClientExtensionRequestableScopesUpdateResponse {

  given jsonCodec: JsonValueCodec[ClientExtensionRequestableScopesUpdateResponse] =
    JsonCodecMaker.make(codecMakerConfig)

  given encoderClientExtensionRequestableScopesUpdateResponse
      : Encoder[ClientExtensionRequestableScopesUpdateResponse] = Encoder.instance { t =>
    Json.fromFields {
      Seq(
        t.requestableScopes.map(v => "requestableScopes" -> v.asJson)
      ).flatten
    }
  }

  given decoderClientExtensionRequestableScopesUpdateResponse
      : Decoder[ClientExtensionRequestableScopesUpdateResponse] = Decoder.instance { c =>
    for {
      requestableScopes <- c.downField("requestableScopes").as[Option[Seq[String]]]
    } yield ClientExtensionRequestableScopesUpdateResponse(
      requestableScopes = requestableScopes
    )
  }

}
