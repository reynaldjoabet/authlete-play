/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * @param clientSecret
  *   The new value of the client secret. Valid characters for a client secret are `A-Z`, `a-z`,
  *   `0-9`, `-`, and `_`. The maximum length of a client secret is 86.
  */
case class ClientSecretUpdateRequest(
    clientSecret: String
)

object ClientSecretUpdateRequest {

  given jsonCodec: JsonValueCodec[ClientSecretUpdateRequest] = JsonCodecMaker.make(codecMakerConfig)

  given encoderClientSecretUpdateRequest: Encoder[ClientSecretUpdateRequest] = Encoder.instance { t =>
    Json.fromFields {
      Seq(
        Some("clientSecret" -> t.clientSecret.asJson)
      ).flatten
    }
  }

  given decoderClientSecretUpdateRequest: Decoder[ClientSecretUpdateRequest] = Decoder.instance { c =>
    for {
      clientSecret <- c.downField("clientSecret").as[String]
    } yield ClientSecretUpdateRequest(
      clientSecret = clientSecret
    )
  }

}
