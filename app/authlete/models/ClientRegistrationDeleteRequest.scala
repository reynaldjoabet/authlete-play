/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * @param clientId
  *   Client ID.
  * @param token
  *   Client registration access token.
  */
case class ClientRegistrationDeleteRequest(
    clientId: String,
    token: String
)

object ClientRegistrationDeleteRequest {

  given jsonCodec: JsonValueCodec[ClientRegistrationDeleteRequest] =
    JsonCodecMaker.make(codecMakerConfig)

  given encoderClientRegistrationDeleteRequest: Encoder[ClientRegistrationDeleteRequest] = Encoder
    .instance { t =>
      Json.fromFields {
        Seq(
          Some("clientId" -> t.clientId.asJson),
          Some("token"    -> t.token.asJson)
        ).flatten
      }
    }

  given decoderClientRegistrationDeleteRequest: Decoder[ClientRegistrationDeleteRequest] = Decoder
    .instance { c =>
      for {
        clientId <- c.downField("clientId").as[String]
        token    <- c.downField("token").as[String]
      } yield ClientRegistrationDeleteRequest(
        clientId = clientId,
        token = token
      )
    }

}
