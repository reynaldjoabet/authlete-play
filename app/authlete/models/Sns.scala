/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  */
enum Sns(val value: String) derives ConfiguredJsonValueCodec {
  case FACEBOOK extends Sns("FACEBOOK")
}

object Sns {

  def withValueOpt(value: String): Option[Sns] = Sns.values.find(_.value == value)

  def withValue(value: String): Sns =
    withValueOpt(value).getOrElse(
      throw java.lang.IllegalArgumentException(s"Sns enum case not found: $value")
    )

  given decoderSns: Decoder[Sns] = Decoder.decodeString.map(withValue)
  given encoderSns: Encoder[Sns] = Encoder.encodeString.contramap[Sns](_.value)

}
