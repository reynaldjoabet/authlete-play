/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * The next action that the authorization server implementation should take.
  */
enum GMResponseAction(val value: String) derives ConfiguredJsonValueCodec {

  case OK            extends GMResponseAction("OK")
  case NOCONTENT     extends GMResponseAction("NO_CONTENT")
  case UNAUTHORIZED  extends GMResponseAction("UNAUTHORIZED")
  case FORBIDDEN     extends GMResponseAction("FORBIDDEN")
  case NOTFOUND      extends GMResponseAction("NOT_FOUND")
  case CALLERERROR   extends GMResponseAction("CALLER_ERROR")
  case AUTHLETEERROR extends GMResponseAction("AUTHLETE_ERROR")

}

object GMResponseAction {

  def withValueOpt(value: String): Option[GMResponseAction] = GMResponseAction
    .values
    .find(_.value == value)

  def withValue(value: String): GMResponseAction =
    withValueOpt(value).getOrElse(
      throw java.lang.IllegalArgumentException(s"GMResponseAction enum case not found: $value")
    )

  given decoderGMResponseAction: Decoder[GMResponseAction] = Decoder.decodeString.map(withValue)

  given encoderGMResponseAction: Encoder[GMResponseAction] = Encoder
    .encodeString
    .contramap[GMResponseAction](_.value)

}
