/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12 Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package models

import com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.ConfiguredJsonValueCodec
import com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMaker
import io.circe.{Decoder, Encoder, Json}
import io.circe.syntax.*

/**
  * The next action that the authorization server implementation should take.
  */
enum FederationConfigurationResponseAction(val value: String) derives ConfiguredJsonValueCodec {

  case OK                  extends FederationConfigurationResponseAction("OK")
  case NOTFOUND            extends FederationConfigurationResponseAction("NOT_FOUND")
  case INTERNALSERVERERROR extends FederationConfigurationResponseAction("INTERNAL_SERVER_ERROR")

}

object FederationConfigurationResponseAction {

  def withValueOpt(value: String): Option[FederationConfigurationResponseAction] =
    FederationConfigurationResponseAction.values.find(_.value == value)

  def withValue(value: String): FederationConfigurationResponseAction =
    withValueOpt(value).getOrElse(
      throw java
        .lang
        .IllegalArgumentException(
          s"FederationConfigurationResponseAction enum case not found: $value"
        )
    )

  given decoderFederationConfigurationResponseAction
      : Decoder[FederationConfigurationResponseAction] = Decoder.decodeString.map(withValue)

  given encoderFederationConfigurationResponseAction
      : Encoder[FederationConfigurationResponseAction] = Encoder
    .encodeString
    .contramap[FederationConfigurationResponseAction](_.value)

}
