/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package apis

import cats.effect.Concurrent

import authlete.models.PushedAuthorizationRequest
import authlete.models.PushedAuthorizationResponse
import authlete.models.Result
import config.AuthleteConfig
import org.typelevel.log4cats.Logger
import sttp.client4.*
import sttp.client4._
import sttp.client4.jsoniter.*
import sttp.client4.Backend
import sttp.model.MediaType
import sttp.model.Method
import sttp.model.StatusCode
import sttp.model.Uri
//import authlete.models.JsoniterSyntaticSugar.*
// import authlete.models.

trait PushedAuthorizationEndpoints[F[*]] {

  /**
    * This API creates a pushed request authorization. It authenticates the client and creates a
    * authorization_uri to be returned by the authorization server.
    *
    * Expected answers: code 200 : PushedAuthorizationResponse () code 400 : Result () code 401 :
    * Result () code 403 : Result () code 500 : Result ()
    *
    * Available security schemes: ServiceCredentials (http)
    *
    * @param pushedAuthorizationRequest
    */
  def pushedAuthReq(
      pushedAuthorizationRequest: PushedAuthorizationRequest
  ): F[PushedAuthorizationResponse]

}

class PushedAuthorizationEndpointsImpl[F[*]: Concurrent](
    backend: Backend[F],
    config: AuthleteConfig,
    logger: Logger[F]
) extends PushedAuthorizationEndpoints[F] {

  override def pushedAuthReq(
      pushedAuthorizationRequest: PushedAuthorizationRequest
  ): F[PushedAuthorizationResponse] = ???

}
