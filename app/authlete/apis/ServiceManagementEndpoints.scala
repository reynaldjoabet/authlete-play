/**
  * Authlete API Authlete API Document.
  *
  * The version of the OpenAPI document: 2.3.12
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package authlete
package apis

import cats.effect.Concurrent

import authlete.models.Result
import authlete.models.Service
import authlete.models.ServiceGetListResponse
import config.AuthleteConfig
import org.typelevel.log4cats.Logger
import sttp.client4.*
import sttp.client4._
import sttp.client4.jsoniter.*
import sttp.client4.Backend
import sttp.model.MediaType
import sttp.model.Method
import sttp.model.StatusCode
import sttp.model.Uri
//import authlete.models.JsoniterSyntaticSugar.*
// import authlete.models.

trait ServiceManagementEndpoints[F[*]] {

  /**
    * Create a new service.
    *
    * Expected answers: code 200 : Service () code 400 : Result () code 401 : Result () code 403 :
    * Result () code 500 : Result ()
    *
    * Available security schemes: ServiceOwnerCredentials (http)
    *
    * @param service
    */
  def serviceCreate(
      service: Option[Service] = None
  ): F[Service]

  /**
    * Delete a service.
    *
    * Expected answers: code 204 : (The service was successfully deleted.) code 400 : Result () code
    * 401 : Result () code 403 : Result () code 500 : Result ()
    *
    * Available security schemes: ServiceOwnerCredentials (http)
    *
    * @param serviceApiKey
    *   The API key of the target service.
    */
  def serviceDelete(
      serviceApiKey: String
  ): F[Unit]

  /**
    * Get a service.
    *
    * Expected answers: code 200 : Service () code 400 : Result () code 401 : Result () code 403 :
    * Result () code 500 : Result ()
    *
    * Available security schemes: ServiceOwnerCredentials (http)
    *
    * @param serviceApiKey
    *   The API key of a service.
    */
  def serviceGet(
      serviceApiKey: String
  ): F[Service]

  /**
    * Get a list of services.
    *
    * Expected answers: code 200 : ServiceGetListResponse () code 400 : Result () code 401 : Result
    * () code 403 : Result () code 500 : Result ()
    *
    * Available security schemes: ServiceOwnerCredentials (http)
    *
    * @param start
    *   Start index (inclusive) of the result set. The default value is 0. Must not be a negative
    *   number.
    * @param end
    *   End index (exclusive) of the result set. The default value is 5. Must not be a negative
    *   number.
    */
  def serviceGetList(
      start: Option[Int] = None,
      end: Option[Int] = None
  ): F[ServiceGetListResponse]

  /**
    * Update a service.
    *
    * Expected answers: code 200 : Service () code 400 : Result () code 401 : Result () code 403 :
    * Result () code 500 : Result ()
    *
    * Available security schemes: ServiceOwnerCredentials (http)
    *
    * @param serviceApiKey
    *   The API key of the target service.
    * @param service
    */
  def serviceUpdate(
      serviceApiKey: String,
      service: Option[Service] = None
  ): F[Service]

}

class ServiceManagementEndpointsImpl[F[*]: Concurrent](
    backend: Backend[F],
    config: AuthleteConfig,
    logger: Logger[F]
) extends ServiceManagementEndpoints[F] {

  override def serviceCreate(service: Option[Service]): F[Service] = ???

  override def serviceDelete(serviceApiKey: String): F[Unit] = ???

  override def serviceGet(serviceApiKey: String): F[Service] = ???

  override def serviceGetList(start: Option[Int], end: Option[Int]): F[ServiceGetListResponse] = ???

  override def serviceUpdate(serviceApiKey: String, service: Option[Service]): F[Service] = ???

}
